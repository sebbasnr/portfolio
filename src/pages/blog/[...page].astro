---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import ParticlesBackground from '../../components/ParticlesBackground.astro';

export async function getStaticPaths({ paginate }) {
  const allBlogPosts = await getCollection('blog');
  return paginate(allBlogPosts, { pageSize: 5 });
}

const { page } = Astro.props;
---

<Layout title="Blog">
  <ParticlesBackground />
  <div class="container blog-container">
    <h1 class="blog-title reveal-on-scroll">Blog.</h1>
    <div class="blog-posts-grid">
      {page.data.length === 0 ? (
        <h2 class="no-posts-message">Blog under construction. Also my motivation for writing.</h2>
      ) : (
        page.data.map((post) => (
          <a href={`/blog/${post.slug}`} class="blog-post-card reveal-on-scroll">
            <div class="blog-post-image-wrapper">
              <img src={post.data.heroImage} alt={post.data.title} class="blog-post-image" />
            </div>
            <div class="blog-post-content">
              <time datetime={post.data.pubDate.toISOString()} class="blog-post-date">
                {new Date(post.data.pubDate).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })}
              </time>
              <h2 class="blog-post-title">{post.data.title}</h2>
              <p class="blog-post-description">{post.data.description}</p>
            </div>
          </a>
        ))
      )}
    </div>

    <div class="pagination">
      {page.url.prev && <a href={page.url.prev} class="prev-page">Previous</a>}
      {page.url.next && <a href={page.url.next} class="next-page">Next</a>}
    </div>
  </div>
</Layout>

<style>
  .blog-container {
    padding-top: 2rem;
    padding-bottom: 4rem;
  }

  @media (max-width: 768px) {
    .blog-container {
      padding-top: 0.5rem;
      margin-top: -2rem;
    }
  }

  .blog-title {
    font-size: 3rem;
    text-align: left;
    margin-bottom: 3rem;
    font-family: 'Instrument Serif', serif;
  }

  .no-posts-message {
    text-align: left;
    font-family: 'Hanken Grotesk', sans-serif;
    color: #FBFBFB;
  }

  body.light-theme .no-posts-message {
    color: #161618;
  }

  .blog-posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
  }

  .blog-post-card {
    background-color: #1e1e20;
    border-radius: 12px;
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    transition: background-color 0.3s ease;
    display: flex;
    flex-direction: column;
  }

  .blog-post-card:hover {
    background-color: #252528;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }
  
  .blog-post-card:hover .blog-post-image {
    transform: scale(1.05);
  }

  .blog-post-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 12px;
    transition: transform 0.5s ease;
    will-change: transform;
    display: block;
    transform-origin: center center;
    position: absolute;
    top: 0;
    left: 0;
  }

  .blog-post-image-wrapper {
    width: calc(100% - 1.5rem);
    height: 300px; 
    margin: 0.75rem 0.75rem 0 0.75rem;
    border-radius: 12px;
    position: relative;
    overflow: hidden;
    background-color: #1e1e20; 
  }

  .blog-post-content {
    padding: 1.5rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .blog-post-title {
    font-size: 1.6rem;
    margin-top: 0;
    margin-bottom: 0.5rem;
    color: #FBFBFB;
    font-family: 'Hanken Grotesk', sans-serif;
    font-weight: 600;
    line-height: 1.3;
  }

  .blog-post-description {
    font-size: 1.05rem;
    color: #C3C3C4;
    margin-bottom: 1rem;
    flex-grow: 1;
    line-height: 1.5;
  }

  .blog-post-date {
    font-size: 0.9rem;
    color: #888;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-family: 'Hanken Grotesk', sans-serif;
  }

  .pagination {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 3rem;
  }

  .pagination a {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background-color: #3b82f6;
    color: white;
    text-decoration: none;
    border-radius: 8px;
    transition: background-color 0.2s ease;
    font-family: 'Hanken Grotesk', sans-serif;
    font-weight: 500;
  }

  .pagination a:hover {
    background-color: #2563eb;
  }

  @media (max-width: 768px) {
    .blog-title {
      font-size: 2.5rem;
      margin-bottom: 2rem;
    }

    .blog-posts-grid {
      grid-template-columns: 1fr;
    }

    .blog-post-card {
      max-width: 400px;
      margin: 0 auto;
    }

    .blog-post-title {
      font-size: 1.3rem;
    }

    .blog-post-description {
      font-size: 0.9rem;
    }

    .blog-post-date {
      font-size: 0.75rem;
    }

    .pagination a {
      padding: 0.6rem 1.2rem;
      font-size: 0.9rem;
    }
  }

  .reveal-on-scroll {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .reveal-on-scroll.is-visible {
    opacity: 1;
    transform: translateY(0);
  }

  body.light-theme .blog-post-card {
    background-color: #EDEDED;
    border: none;
  }

  body.light-theme .blog-post-title {
    color: #161618;
  }

  body.light-theme .blog-post-description {
    color: #777777;
  }

    body.light-theme .blog-post-date {
    color: #777777;
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('is-visible');
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1
    });

    document.querySelectorAll('.reveal-on-scroll').forEach(element => {
      observer.observe(element);
    });
  });
</script>